{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/charith/Desktop/Projects/Individual Projects/React Projects/netflixclone/src/Components/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../Other Files/axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fecthData() {\n      const request = await axios.get(props.fetchUrl);\n      setMovies(request.data.results);\n    }\n\n    fecthData();\n  }, [props.fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const handleclick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${baseURL}${props.islargerow ? movie.poster_path : movie.backdrop_path}`,\n        className: `row-poster ${props.islargerow && \"row-posterlarge\"}`,\n        alt: movie.name,\n        onClick: () => handleclick(movie)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/home/charith/Desktop/Projects/Individual Projects/React Projects/netflixclone/src/Components/Row.js"],"names":["React","useEffect","useState","axios","Youtube","movieTrailer","baseURL","Row","props","movies","setMovies","trailerUrl","setTrailerUrl","fecthData","request","get","fetchUrl","data","results","opts","height","width","playerVars","autoplay","handleclick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","title","map","islargerow","poster_path","backdrop_path","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUP,KAAK,CAACQ,QAAhB,CAAtB;AACAN,MAAAA,SAAS,CAACI,OAAO,CAACG,IAAR,CAAaC,OAAd,CAAT;AACD;;AACDL,IAAAA,SAAS;AACV,GANQ,EAMN,CAACL,KAAK,CAACQ,QAAP,CANM,CAAT;AAQA,QAAMG,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AAHD,GAAb;;AAQA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAId,UAAJ,EAAgB;AACdC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAFD,MAEO;AACLP,MAAAA,YAAY,CAAC,CAAAoB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,KAAe,EAAhB,CAAZ,CACGC,IADH,CACSC,GAAD,IAAS;AACb,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACApB,QAAAA,aAAa,CAACiB,SAAS,CAACd,GAAV,CAAc,GAAd,CAAD,CAAb;AACD,OAJH,EAKGkB,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALpB;AAMD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAK1B,KAAK,CAAC6B;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACG5B,MAAM,CAAC6B,GAAP,CAAYb,KAAD,iBACV;AAEE,QAAA,GAAG,EAAG,GAAEnB,OAAQ,GACdE,KAAK,CAAC+B,UAAN,GAAmBd,KAAK,CAACe,WAAzB,GAAuCf,KAAK,CAACgB,aAC9C,EAJH;AAKE,QAAA,SAAS,EAAG,cAAajC,KAAK,CAAC+B,UAAN,IAAoB,iBAAkB,EALjE;AAME,QAAA,GAAG,EAAEd,KAAK,CAACC,IANb;AAOE,QAAA,OAAO,EAAE,MAAMF,WAAW,CAACC,KAAD;AAP5B,SACOA,KAAK,CAACiB,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAeG/B,UAAU,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,UAAlB;AAA8B,MAAA,IAAI,EAAEQ;AAApC;AAAA;AAAA;AAAA;AAAA,YAfjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApDQZ,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"../Other Files/axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fecthData() {\n      const request = await axios.get(props.fetchUrl);\n      setMovies(request.data.results);\n    }\n    fecthData();\n  }, [props.fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleclick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{props.title}</h1>\n      <div className=\"row-posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            src={`${baseURL}${\n              props.islargerow ? movie.poster_path : movie.backdrop_path\n            }`}\n            className={`row-poster ${props.islargerow && \"row-posterlarge\"}`}\n            alt={movie.name}\n            onClick={() => handleclick(movie)}\n          />\n        ))}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}