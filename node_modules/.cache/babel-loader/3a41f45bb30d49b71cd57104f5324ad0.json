{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/charith/Desktop/Projects/Individual Projects/React Projects/netflixclone/src/Components/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../Other Files/axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fecthData() {\n      const request = await axios.get(props.fetchUrl);\n      setMovies(request.data.results);\n    }\n\n    fecthData();\n  }, [props.fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${baseURL}${props.islargerow ? movie.poster_path : movie.backdrop_path}`,\n        className: `row-poster ${props.islargerow && \"row-posterlarge\"}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: \"TAa4yAXyVII\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/home/charith/Desktop/Projects/Individual Projects/React Projects/netflixclone/src/Components/Row.js"],"names":["React","useEffect","useState","axios","Youtube","baseURL","Row","props","movies","setMovies","fecthData","request","get","fetchUrl","data","results","opts","height","width","playerVars","autoplay","title","map","movie","islargerow","poster_path","backdrop_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUL,KAAK,CAACM,QAAhB,CAAtB;AACAJ,MAAAA,SAAS,CAACE,OAAO,CAACG,IAAR,CAAaC,OAAd,CAAT;AACD;;AACDL,IAAAA,SAAS;AACV,GANQ,EAMN,CAACH,KAAK,CAACM,QAAP,CANM,CAAT;AAQA,QAAMG,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AAHD,GAAb;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKb,KAAK,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGb,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACV;AAEE,QAAA,GAAG,EAAG,GAAElB,OAAQ,GACdE,KAAK,CAACiB,UAAN,GAAmBD,KAAK,CAACE,WAAzB,GAAuCF,KAAK,CAACG,aAC9C,EAJH;AAKE,QAAA,SAAS,EAAG,cAAanB,KAAK,CAACiB,UAAN,IAAoB,iBAAkB,EALjE;AAME,QAAA,GAAG,EAAED,KAAK,CAACI;AANb,SACOJ,KAAK,CAACK,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,aAAjB;AAA+B,MAAA,IAAI,EAAEZ;AAArC;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArCQV,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"../Other Files/axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\n\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fecthData() {\n      const request = await axios.get(props.fetchUrl);\n      setMovies(request.data.results);\n    }\n    fecthData();\n  }, [props.fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{props.title}</h1>\n      <div className=\"row-posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            src={`${baseURL}${\n              props.islargerow ? movie.poster_path : movie.backdrop_path\n            }`}\n            className={`row-poster ${props.islargerow && \"row-posterlarge\"}`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      <Youtube videoId=\"TAa4yAXyVII\" opts={opts} />\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}